{"version":3,"sources":["../../src/Switch.js","../../src/index.js","App.js","index.js"],"names":["Switch","props","iconClassName","iconStyle","checked","checkedIconStyle","checkedIndicatorStyle","checkedTrackStyle","className","containerClassName","containerStyle","disabled","icon","id","indicatorClassName","indicatorStyle","labelStyle","labelClassName","onChange","style","trackClassName","trackStyle","useState","check","setCheck","useEffect","class","for","onClick","e","type","fill","height","width","opacity","transition","display","alignItems","background","borderRadius","bottom","justifyContent","left","outline","position","fontWeight","marginBottom","clip","clipPath","overflow","whiteSpace","border","cursor","marginRight","viewBox","role","d","Checkbox","borderColor","borderStyle","borderWidth","checkbox","label","name","reference","right","size","value","tabIndex","rest","toggle","onKeyDown","ref","hidden","marginLeft","backgroundColor","padding","switchCheckedStyles","boxShadow","transform","App","switchOneCheck","setSwitchOneCheck","color","alert","userSelect","src","alt","flex","alignSelf","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8611f5af.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\n/**\n * @param {Object} props \n * @param {String} props.activeIconClassName\n * @param {Object} props.activeIconStyle\n * @param {Boolean} props.checked\n * @param {Object} props.checkedIconStyle\n * @param {Object} props.checkedIndicatorStyle\n * @param {Object} props.checkedTrackStyle\n * @param {String} props.className\n * @param {String} props.containerClassName\n * @param {Object} props.containerStyle\n * @param {Boolean} props.disabled\n * @param {React.ReactElement} props.icon\n * @param {String} props.id\n * @param {String} props.indicatorClassName\n * @param {Object} props.indicatorStyle\n * @param {Object} props.labelStyle\n * @param {String} props.labelClassName\n * @param {function()} props.onChange\n * @param {Object} props.style\n * @param {String} props.trackClassName\n * @param {Object} props.trackStyle\n * @returns {React.ReactElement}\n */\nconst Switch = (props) => {\n  const {\n    iconClassName,\n    iconStyle,\n    checked,\n    checkedIconStyle,\n    checkedIndicatorStyle,\n    checkedTrackStyle,\n    className,\n    containerClassName,\n    containerStyle,\n    disabled,\n    icon,\n    id,\n    indicatorClassName,\n    indicatorStyle,\n    labelStyle,\n    labelClassName,\n    onChange,\n    style,\n    trackClassName,\n    trackStyle,\n  } = props;\n\n  const [check, setCheck] = useState(checked);\n\n  const toggle = (e) => {\n    e.preventDefault();\n    if (disabled) {\n      return null;\n    }\n    setCheck(!check);\n    onChange && onChange(!check, e);\n  };\n\n  useEffect(() => {\n    setCheck(checked);\n  }, [checked]);\n\n  return (\n    <div style={containerStyle} containerClassName={containerClassName}>\n      {/* begin toggle markup */}\n      <label class={labelClassName} style={labelStyle} for={id} onClick={toggle}>\n        <input type=\"checkbox\" className={className} style={style} checked={checked} id={id} />\n        <span className={trackClassName} style={{...trackStyle, ...(checked ? checkedTrackStyle : {})}}>\n          <span className={indicatorClassName} style={{...indicatorStyle, ...(checked ? checkedIndicatorStyle : {})}}>\n            {/* This check mark is optional  */}\n            {icon ? (\n              <span class={iconClassName} style={{...iconStyle, ...(checked ? checkedIconStyle : {})}}>\n                {icon}\n              </span>\n            ) : null}\n          </span>\n        </span>\n      </label>\n    </div>\n  )\n}\nSwitch.defaultProps = {\n  iconClassName: \"larven__activeIcon\",\n  iconStyle: {\n    fill: '#fff',\n    height: 20,\n    width: 20,\n    opacity: 0,\n    transition: 'all 0.25s ease-in-out',\n  },\n  checkedIconStyle: {},\n  checkedIndicatorStyle: {},\n  checkedTrackStyle: {},\n  className: \"larven__toggleInput\",\n  containerStyle: { display: 'inline-block' },\n  id: \"larven__switchID\",\n  indicatorClassName: \"larven__toggle-indicator\",\n  indicatorStyle: {\n    alignItems: 'center',\n    background: '#121943',\n    borderRadius: 24,\n    bottom: 2,\n    display: 'flex',\n    height: 24,\n    justifyContent: 'center',\n    left: 2,\n    outline: 'solid 2px transparent',\n    position: 'absolute',\n    transition: '0.25s',\n    width: 24,\n  },\n  labelStyle: {\n    alignItems: 'center',\n    borderRadius: 100,\n    display: 'flex',\n    fontWeight: 700,\n    marginBottom: 16,\n  },\n  labelClassName: \"larven__toggle\",\n  style: {\n    clip: 'rect(0 0 0 0)',\n    clipPath: 'inset(50%)',\n    height: 1,\n    overflow: 'hidden',\n    position: 'absolute',\n    whiteSpace: 'nowrap',\n    width: 1,\n  },\n  trackClassName: \"larven__toggle-track\",\n  trackStyle: {\n    background: '#e5efe9',\n    border: '1px solid #5a72b5',\n    borderRadius: 100,\n    cursor: 'pointer',\n    display: 'flex',\n    height: 30,\n    marginRight: 12,\n    position: 'relative',\n    width: 60,\n  },\n  icon: (\n    <svg viewBox=\"0 0 24 24\" id=\"ghq-svg-check\" role=\"presentation\" aria-hidden=\"true\">\n      <path d=\"M9.86 18a1 1 0 01-.73-.32l-4.86-5.17a1.001 1.001 0 011.46-1.37l4.12 4.39 8.41-9.2a1 1 0 111.48 1.34l-9.14 10a1 1 0 01-.73.33h-.01z\"></path>\n    </svg>\n  ),\n};\nexport default Switch;","import React, { useState, useEffect } from \"react\";\nimport Switch from './Switch';\n\nconst Checkbox = (props) => {\n  const {\n    borderColor,\n    borderRadius,\n    borderStyle,\n    borderWidth,\n    checkbox,\n    className,\n    checked,\n    disabled,\n    containerClassName,\n    containerStyle,\n    label,\n    labelClassName,\n    labelStyle,\n    name,\n    onChange,\n    reference,\n    right,\n    size,\n    style,\n    value,\n    icon,\n    tabIndex,\n    ...rest\n  } = props;\n  const [check, setCheck] = useState(checked);\n\n  const toggle = (e) => {\n    e.preventDefault();\n    if (disabled) {\n      return null;\n    }\n    setCheck(!check);\n    onChange && onChange(!check, e);\n  };\n\n  useEffect(() => {\n    setCheck(checked);\n  }, [checked]);\n\n  return (\n    <label\n      style={{\n        display: \"flex\",\n        alignItems: \"center\",\n        ...containerStyle,\n      }}\n      className={containerClassName}\n      onClick={(e) => toggle(e)}\n    >\n      {(right && label && (\n        <span className={labelClassName} style={labelStyle}>\n          {label}\n        </span>\n      )) ||\n        null}\n      {checkbox || (\n        <span>\n          <div\n            style={{\n              height: size,\n              width: size,\n              borderWidth: borderWidth,\n              borderColor: borderColor,\n              borderStyle: borderStyle,\n              borderRadius: borderRadius,\n              ...style,\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              cursor: disabled ? \"not-allowed\" : \"\",\n            }}\n            tabIndex={tabIndex}\n            // onKeyPress={(e) => (!disabled ? toggle(e) : null)}\n            // toggle checkbox on press enter or space\n            onKeyDown={(e) => {\n              if (e.key === 'Enter' || e.key === ' ' || e.key === 'Spacebar') {\n                toggle(e);\n              }\n            }}\n            className={className}\n          >\n            {(check && icon) || null}\n            <input\n              {...rest}\n              ref={reference}\n              type=\"checkbox\"\n              name={name}\n              checked={check}\n              value={value}\n              onChange={toggle}\n              disabled={disabled}\n              hidden\n            />\n          </div>\n        </span>\n      )}\n      {(!right && label && (\n        <span className={labelClassName} style={labelStyle}>\n          {label}\n        </span>\n      )) ||\n        null}\n    </label>\n  );\n};\nCheckbox.defaultProps = {\n  borderColor: \"#D7C629\",\n  borderStyle: \"solid\",\n  borderWidth: 2,\n  borderRadius: 5,\n  checked: false,\n  disabled: false,\n  right: false,\n  name: \"\",\n  size: 18,\n  style: {},\n  className: \"\",\n  labelStyle: { marginLeft: 5 },\n  labelClassName: \"\",\n  containerStyle: {},\n  containerClassName: \"\",\n  value: \"\",\n  onChange: null,\n  icon: (\n    <div style={{ backgroundColor: \"#D7C629\", borderRadius: 5, padding: 5 }} />\n  ),\n};\nexport default Checkbox;\nexport {Switch};","import React, { useState } from \"react\";\nimport * as Icon from \"react-icons/fi\";\nimport Checkbox, { Switch } from \"react-custom-checkbox\";\n\nconst switchCheckedStyles = {\n  border: '1px solid transparent',\n  boxShadow: '0px 0px 0px 2px #121943',\n  opacity: 1,\n  transition: 'all 0.25s ease-in-out',\n}\n\nconst checkedIndicatorStyle = {\n  background: '#121943',\n  transform: 'translateX(30px)',\n}\n\nconst checkedIconStyle = {\n  opacity: 1,\n  transition: 'all 0.25s ease-in-out',\n}\n\nconst App = () => {\n  const [switchOneCheck, setSwitchOneCheck] = useState(false);\n\n  return (\n    <>\n      <h4>Default:</h4>\n      <Checkbox tabIndex={1} />\n      <h4>Using Custom Icon:</h4>\n      <Checkbox\n        tabIndex={2}\n        icon={<Icon.FiCheck color=\"#174A41\" size={14} />}\n        name=\"my-input\"\n        checked={true}\n        onChange={(value) => {\n          let p = {\n            isTrue: value,\n          };\n          return alert(value);\n        }}\n        borderColor=\"#D7C629\"\n        style={{ cursor: \"pointer\" }}\n        labelStyle={{ marginLeft: 5, userSelect: \"none\" }}\n        label=\"Have you started using it?\"\n      />\n      <h4>Using Image Icon:</h4>\n      <Checkbox\n        tabIndex={3}\n        checked={true}\n        icon={<img src=\"https://raw.githubusercontent.com/LarvenLLC/react-custom-checkbox/master/example/src/check.png\" style={{ width: 24 }} alt=\"\" />}\n        borderColor=\"#D7C629\"\n        borderRadius={10}\n        size={18}\n        label=\"Get em!\"\n      />\n      <h4>More Styling:</h4>\n      <Checkbox\n        tabIndex={4}\n        checked={true}\n        icon={\n          <div\n            style={{\n              display: \"flex\",\n              flex: 1,\n              backgroundColor: \"#174A41\",\n              alignSelf: \"stretch\",\n            }}\n          >\n            <Icon.FiCheck color=\"white\" size={20} />\n          </div>\n        }\n        borderColor=\"#174A41\"\n        // borderWidth={0}\n        borderRadius={20}\n        style={{ overflow: \"hidden\" }}\n        size={20}\n        label=\"Coooool right?\"\n      />\n      <h2>Switch:</h2>\n      <Switch\n        checked={switchOneCheck}\n        onChange={setSwitchOneCheck}\n        checkedIconStyle={checkedIconStyle}\n        checkedIndicatorStyle={checkedIndicatorStyle}\n        checkedTrackStyle={switchCheckedStyles}\n      />\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}