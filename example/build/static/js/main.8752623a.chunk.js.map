{"version":3,"sources":["../../src/Switch.js","../../src/index.js","App.js","index.js"],"names":["Switch","props","trackStyle","useState","useEffect","setCheck","class","style","for","onClick","e","onChange","type","className","checked","id","indicatorStyle","activeIconStyle","activeIconClassName","fill","height","width","opacity","transition","indicatorClassName","alignItems","background","borderRadius","bottom","display","justifyContent","left","outline","position","labelStyle","fontWeight","marginBottom","labelClassName","clip","clipPath","overflow","whiteSpace","trackClassName","border","cursor","marginRight","icon","viewBox","role","d","Checkbox","rest","toggle","containerStyle","right","checkbox","borderWidth","borderColor","borderStyle","disabled","tabIndex","onKeyDown","check","label","name","size","marginLeft","containerClassName","value","backgroundColor","padding","switchCheckedStyles","boxShadow","transform","switchActiveIconStyle","App","switchOneCheck","setSwitchOneCheck","color","alert","userSelect","src","alt","flex","alignSelf","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8752623a.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\n/**\n * @param {Object} props \n * @param {String} props.activeIconClassName\n * @param {Object} props.activeIconStyle\n * @param {Boolean} props.checked\n * @param {String} props.className\n * @param {Boolean} props.disabled\n * @param {React.ReactElement} props.icon\n * @param {String} props.id\n * @param {String} props.indicatorClassName\n * @param {Object} props.indicatorStyle\n * @param {Object} props.labelStyle\n * @param {String} props.labelClassName\n * @param {function()} props.onChange\n * @param {Object} props.style\n * @param {String} props.trackClassName\n * @param {Object} props.trackStyle\n * @returns {React.ReactElement}\n */\nconst Switch = (props) => {\n  const {\n    activeIconClassName,\n    activeIconStyle,\n    checked,\n    className,\n    disabled,\n    icon,\n    id,\n    indicatorClassName,\n    indicatorStyle,\n    labelStyle,\n    labelClassName,\n    onChange,\n    style,\n    trackClassName,\n    trackStyle,\n  } = props;\n\n  const [check, setCheck] = useState(checked);\n\n  const toggle = (e) => {\n    e.preventDefault();\n    if (disabled) {\n      return null;\n    }\n    setCheck(!check);\n    onChange && onChange(!check, e);\n  };\n\n  useEffect(() => {\n    setCheck(checked);\n  }, [checked]);\n\n  return (\n    <div>\n      {/* begin toggle markup */}\n      <label class={labelClassName} style={labelStyle} for={id} onClick={toggle}>\n        <input type=\"checkbox\" className={className} style={style} checked={checked} id={id} />\n        <span className={trackClassName} style={trackStyle}>\n          <span className={indicatorClassName} style={indicatorStyle}>\n            {/* This check mark is optional  */}\n            <span class={activeIconClassName} style={activeIconStyle}>\n              {icon}\n            </span>\n          </span>\n        </span>\n      </label>\n    </div>\n  )\n}\nSwitch.defaultProps = {\n  activeIconClassName: \"larven__activeIcon\",\n  activeIconStyle: {\n    fill: '#fff',\n    height: 20,\n    width: 20,\n    opacity: 0,\n    transition: 'opacity 0.25s ease-in-out',\n  },\n  className: \"larven__toggleInput\",\n  id: \"larven__switchID\",\n  indicatorClassName: \"larven__toggle-indicator\",\n  indicatorStyle: {\n    alignItems: 'center',\n    background: '#121943',\n    borderRadius: 24,\n    bottom: 2,\n    display: 'flex',\n    height: 24,\n    justifyContent: 'center',\n    left: 2,\n    outline: 'solid 2px transparent',\n    position: 'absolute',\n    transition: '0.25s',\n    width: 24,\n  },\n  labelStyle: {\n    alignItems: 'center',\n    borderRadius: 100,\n    display: 'flex',\n    fontWeight: 700,\n    marginBottom: 16,\n  },\n  labelClassName: \"larven__toggle\",\n  style: {\n    clip: 'rect(0 0 0 0)',\n    clipPath: 'inset(50%)',\n    height: 1,\n    overflow: 'hidden',\n    position: 'absolute',\n    whiteSpace: 'nowrap',\n    width: 1,\n  },\n  trackClassName: \"larven__toggle-track\",\n  trackStyle: {\n    background: '#e5efe9',\n    border: '1px solid #5a72b5',\n    borderRadius: 100,\n    cursor: 'pointer',\n    display: 'flex',\n    height: 30,\n    marginRight: 12,\n    position: 'relative',\n    width: 60,\n  },\n  icon: (\n    <svg viewBox=\"0 0 24 24\" id=\"ghq-svg-check\" role=\"presentation\" aria-hidden=\"true\">\n              <path d=\"M9.86 18a1 1 0 01-.73-.32l-4.86-5.17a1.001 1.001 0 011.46-1.37l4.12 4.39 8.41-9.2a1 1 0 111.48 1.34l-9.14 10a1 1 0 01-.73.33h-.01z\"></path>\n            </svg>\n  ),\n};\nexport default Switch;","import React, { useState, useEffect } from \"react\";\nimport Switch from './Switch';\n\nconst Checkbox = (props) => {\n  const {\n    borderColor,\n    borderRadius,\n    borderStyle,\n    borderWidth,\n    checkbox,\n    className,\n    checked,\n    disabled,\n    containerClassName,\n    containerStyle,\n    label,\n    labelClassName,\n    labelStyle,\n    name,\n    onChange,\n    reference,\n    right,\n    size,\n    style,\n    value,\n    icon,\n    tabIndex,\n    ...rest\n  } = props;\n  const [check, setCheck] = useState(checked);\n\n  const toggle = (e) => {\n    e.preventDefault();\n    if (disabled) {\n      return null;\n    }\n    setCheck(!check);\n    onChange && onChange(!check, e);\n  };\n\n  useEffect(() => {\n    setCheck(checked);\n  }, [checked]);\n\n  return (\n    <label\n      style={{\n        display: \"flex\",\n        alignItems: \"center\",\n        ...containerStyle,\n      }}\n      className={containerClassName}\n      onClick={(e) => toggle(e)}\n    >\n      {(right && label && (\n        <span className={labelClassName} style={labelStyle}>\n          {label}\n        </span>\n      )) ||\n        null}\n      {checkbox || (\n        <span>\n          <div\n            style={{\n              height: size,\n              width: size,\n              borderWidth: borderWidth,\n              borderColor: borderColor,\n              borderStyle: borderStyle,\n              borderRadius: borderRadius,\n              ...style,\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              cursor: disabled ? \"not-allowed\" : \"\",\n            }}\n            tabIndex={tabIndex}\n            // onKeyPress={(e) => (!disabled ? toggle(e) : null)}\n            // toggle checkbox on press enter or space\n            onKeyDown={(e) => {\n              if (e.key === 'Enter' || e.key === ' ' || e.key === 'Spacebar') {\n                toggle(e);\n              }\n            }}\n            className={className}\n          >\n            {(check && icon) || null}\n            <input\n              {...rest}\n              ref={reference}\n              type=\"checkbox\"\n              name={name}\n              checked={check}\n              value={value}\n              onChange={toggle}\n              disabled={disabled}\n              hidden\n            />\n          </div>\n        </span>\n      )}\n      {(!right && label && (\n        <span className={labelClassName} style={labelStyle}>\n          {label}\n        </span>\n      )) ||\n        null}\n    </label>\n  );\n};\nCheckbox.defaultProps = {\n  borderColor: \"#D7C629\",\n  borderStyle: \"solid\",\n  borderWidth: 2,\n  borderRadius: 5,\n  checked: false,\n  disabled: false,\n  right: false,\n  name: \"\",\n  size: 18,\n  style: {},\n  className: \"\",\n  labelStyle: { marginLeft: 5 },\n  labelClassName: \"\",\n  containerStyle: {},\n  containerClassName: \"\",\n  value: \"\",\n  onChange: null,\n  icon: (\n    <div style={{ backgroundColor: \"#D7C629\", borderRadius: 5, padding: 5 }} />\n  ),\n};\nexport default Checkbox;\nexport {Switch};","import React, { useState } from \"react\";\nimport * as Icon from \"react-icons/fi\";\nimport Checkbox, { Switch } from \"react-custom-checkbox\";\n\nconst switchCheckedStyles = {\n  border: '1px solid transparent',\n  boxShadow: '0px 0px 0px 2px #121943',\n  background: '#121943',\n  transform: 'translateX(30px)',\n  opacity: 1,\n  transition: 'opacity 0.25s ease-in-out',\n}\n\nconst switchActiveIconStyle = {\n  opacity: 1,\n  transition: 'opacity 0.25s ease-in-out',\n}\n\nconst App = () => {\n  const [switchOneCheck, setSwitchOneCheck] = useState(false);\n\n  return (\n    <>\n      <h4>Default:</h4>\n      <Checkbox tabIndex={1} />\n      <h4>Using Custom Icon:</h4>\n      <Checkbox\n        tabIndex={2}\n        icon={<Icon.FiCheck color=\"#174A41\" size={14} />}\n        name=\"my-input\"\n        checked={true}\n        onChange={(value) => {\n          let p = {\n            isTrue: value,\n          };\n          return alert(value);\n        }}\n        borderColor=\"#D7C629\"\n        style={{ cursor: \"pointer\" }}\n        labelStyle={{ marginLeft: 5, userSelect: \"none\" }}\n        label=\"Have you started using it?\"\n      />\n      <h4>Using Image Icon:</h4>\n      <Checkbox\n        tabIndex={3}\n        checked={true}\n        icon={<img src=\"https://raw.githubusercontent.com/LarvenLLC/react-custom-checkbox/master/example/src/check.png\" style={{ width: 24 }} alt=\"\" />}\n        borderColor=\"#D7C629\"\n        borderRadius={10}\n        size={18}\n        label=\"Get em!\"\n      />\n      <h4>More Styling:</h4>\n      <Checkbox\n        tabIndex={4}\n        checked={true}\n        icon={\n          <div\n            style={{\n              display: \"flex\",\n              flex: 1,\n              backgroundColor: \"#174A41\",\n              alignSelf: \"stretch\",\n            }}\n          >\n            <Icon.FiCheck color=\"white\" size={20} />\n          </div>\n        }\n        borderColor=\"#174A41\"\n        // borderWidth={0}\n        borderRadius={20}\n        style={{ overflow: \"hidden\" }}\n        size={20}\n        label=\"Coooool right?\"\n      />\n      <h2>Switch:</h2>\n      <Switch\n        checked={switchOneCheck}\n        onChange={setSwitchOneCheck}\n        trackStyle={switchOneCheck ? switchCheckedStyles : {}}\n        indicatorStyle={switchOneCheck ? switchCheckedStyles : {}}\n        activeIconStyle={switchActiveIconStyle}\n      />\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}