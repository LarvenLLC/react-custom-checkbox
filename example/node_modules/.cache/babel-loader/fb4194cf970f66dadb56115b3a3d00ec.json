{"ast":null,"code":"import _objectSpread from \"/home/adam/Desktop/react-custom-checkbox/react-custom-checkbox/node_modules/react-scripts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/adam/Desktop/react-custom-checkbox/react-custom-checkbox/node_modules/react-scripts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\n\nconst Checkbox = props => {\n  const borderColor = props.borderColor,\n        borderRadius = props.borderRadius,\n        borderStyle = props.borderStyle,\n        borderWidth = props.borderWidth,\n        checkbox = props.checkbox,\n        className = props.className,\n        checked = props.checked,\n        containerClassName = props.containerClassName,\n        containerStyle = props.containerStyle,\n        label = props.label,\n        labelClassName = props.labelClassName,\n        labelStyle = props.labelStyle,\n        name = props.name,\n        onChange = props.onChange,\n        reference = props.reference,\n        right = props.right,\n        size = props.size,\n        style = props.style,\n        value = props.value,\n        icon = props.icon;\n\n  const _useState = useState(checked),\n        _useState2 = _slicedToArray(_useState, 2),\n        check = _useState2[0],\n        setCheck = _useState2[1];\n\n  const toggle = e => {\n    e.preventDefault();\n    setCheck(!check);\n    onChange && onChange(!check);\n  };\n\n  useEffect(() => {\n    setCheck(checked);\n  }, [checked]);\n  return /*#__PURE__*/React.createElement('label', {\n    style: containerStyle,\n    className: containerClassName,\n    onClick: toggle\n  }, right && label && /*#__PURE__*/React.createElement('span', {\n    className: labelClassName,\n    style: labelStyle\n  }, label) || null, checkbox || /*#__PURE__*/React.createElement('span', null, /*#__PURE__*/React.createElement('div', {\n    style: _objectSpread(_objectSpread({}, style), {}, {\n      height: size,\n      width: size,\n      borderWidth: borderWidth,\n      borderColor: borderColor,\n      borderStyle: borderStyle,\n      borderRadius: borderRadius,\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center'\n    }),\n    className: className\n  }, check && icon || null, /*#__PURE__*/React.createElement('input', {\n    ref: reference,\n    type: 'checkbox',\n    name: name,\n    checked: check,\n    value: value,\n    onChange: toggle,\n    hidden: true\n  }))), !right && label && /*#__PURE__*/React.createElement('span', {\n    className: labelClassName,\n    style: labelStyle\n  }, label) || null);\n};\n\nCheckbox.defaultProps = {\n  borderColor: '#D7C629',\n  borderStyle: 'solid',\n  borderWidth: 2,\n  borderRadius: 5,\n  checked: false,\n  right: false,\n  name: '',\n  size: 18,\n  style: {},\n  className: '',\n  labelStyle: {},\n  labelClassName: '',\n  containerStyle: {},\n  containerClassName: '',\n  value: '',\n  onChange: null,\n  icon: /*#__PURE__*/React.createElement('div', {\n    style: {\n      backgroundColor: '#D7C629',\n      borderRadius: 5,\n      padding: 5\n    }\n  })\n};\nexport default Checkbox;","map":{"version":3,"sources":["../src/index.js"],"names":["Checkbox","props","icon","useState","toggle","e","setCheck","onChange","useEffect","right","label","borderColor","borderStyle","justifyContent","className","labelClassName","labelStyle","containerStyle","backgroundColor","padding"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\n\nconst Checkbox = (props) => {\n  const {\n    borderColor,\n    borderRadius,\n    borderStyle,\n    borderWidth,\n    checkbox,\n    className,\n    checked,\n    containerClassName,\n    containerStyle,\n    label,\n    labelClassName,\n    labelStyle,\n    name,\n    onChange,\n    reference,\n    right,\n    size,\n    style,\n    value,\n    icon\n  } = props\n  const [check, setCheck] = useState(checked)\n\n  const toggle = (e) => {\n    e.preventDefault()\n    setCheck(!check)\n    onChange && onChange(!check)\n  }\n\n  useEffect(() => {\n    setCheck(checked)\n  }, [checked])\n\n  return (\n    <label\n      style={containerStyle}\n      className={containerClassName}\n      onClick={toggle}\n    >\n      {(right && label && (\n        <span className={labelClassName} style={labelStyle}>\n          {label}\n        </span>\n      )) ||\n        null}\n      {checkbox || (\n        <span>\n          <div\n            style={{\n              ...style,\n              height: size,\n              width: size,\n              borderWidth: borderWidth,\n              borderColor: borderColor,\n              borderStyle: borderStyle,\n              borderRadius: borderRadius,\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center'\n            }}\n            className={className}\n          >\n            {(check && icon) || null}\n            <input\n              ref={reference}\n              type='checkbox'\n              name={name}\n              checked={check}\n              value={value}\n              onChange={toggle}\n              hidden\n            />\n          </div>\n        </span>\n      )}\n      {(!right && label && (\n        <span className={labelClassName} style={labelStyle}>\n          {label}\n        </span>\n      )) ||\n        null}\n    </label>\n  )\n}\nCheckbox.defaultProps = {\n  borderColor: '#D7C629',\n  borderStyle: 'solid',\n  borderWidth: 2,\n  borderRadius: 5,\n  checked: false,\n  right: false,\n  name: '',\n  size: 18,\n  style: {},\n  className: '',\n  labelStyle: {},\n  labelClassName: '',\n  containerStyle: {},\n  containerClassName: '',\n  value: '',\n  onChange: null,\n  icon: (\n    <div style={{ backgroundColor: '#D7C629', borderRadius: 5, padding: 5 }} />\n  )\n}\nexport default Checkbox\n"]},"metadata":{},"sourceType":"module"}